version: '3.9'
services:

  ### config server(mongo)
  config:
    image: anti1346/mongo:5.0.8
    container_name: config
    restart: always
    env_file:
      - ./../.env
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
    #   MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ulimits:
      nofile:
        soft: 300000
        hard: 300000
    command: mongod --configsvr --replSet configserver --keyFile /data/key/mongo.key --dbpath /data/db --bind_ip_all --port 27018
    volumes:
      - ./mongodb/data-config:/data/db
    network_mode: host
    extra_hosts:
      - mongodb-201:${NODE1}
      - mongodb-202:${NODE2}
      - mongodb-203:${NODE3}
    expose:
      - 27018


  ### Mongodb Servers
  ### replica set 1(shard)
  mongo1:
    image: anti1346/mongo:5.0.8
    container_name: mongo1
    restart: unless-stopped
    env_file:
      - ./../.env
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
    #   MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    command: mongod --shardsvr --replSet rs0 --keyFile /data/key/mongo.key --dbpath /data/db --bind_ip_all --port 27011
    volumes:
      - ./mongodb/data-mongo1:/data/db
    network_mode: host
    extra_hosts:
      - mongodb-201:${NODE1}
      - mongodb-202:${NODE2}
      - mongodb-203:${NODE3}
    expose:
      - 27011

  mongo2:
    image: anti1346/mongo:5.0.8
    container_name: mongo2
    restart: unless-stopped
    env_file:
      - ./../.env
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
    #   MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    command: mongod --shardsvr --replSet rs0 --keyFile /data/key/mongo.key --dbpath /data/db --bind_ip_all --port 27012
    volumes:
      - ./mongodb/data-mongo2:/data/db
    network_mode: host
    extra_hosts:
      - mongodb-201:${NODE1}
      - mongodb-202:${NODE2}
      - mongodb-203:${NODE3}
    expose:
      - 27012
  
  mongo3:
    image: anti1346/mongo:5.0.8
    container_name: mongo3
    restart: unless-stopped
    env_file:
      - ./../.env
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
    #   MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    command: mongod --shardsvr --replSet rs0 --keyFile /data/key/mongo.key --dbpath /data/db --bind_ip_all --port 27013
    volumes:
      - ./mongodb/data-mongo3:/data/db
    network_mode: host
    extra_hosts:
      - mongodb-201:${NODE1}
      - mongodb-202:${NODE2}
      - mongodb-203:${NODE3}
    expose:
      - 27013


  ### router(mongos)
  router:
    image: anti1346/mongo:5.0.8
    container_name: router
    restart: unless-stopped
    env_file:
      - ./../.env
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
    #   MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    command: mongos --configdb configserver/mongodb-201:27018,mongodb-202:27018,mongodb-203:27018 --keyFile /data/key/mongo.key --bind_ip_all --port 27017
    volumes:
      - ./mongodb/data-router:/data/db
    network_mode: host
    extra_hosts:
      - mongodb-201:${NODE1}
      - mongodb-202:${NODE2}
      - mongodb-203:${NODE3}
    depends_on:
      - config
    expose:
      - 27017


  # ### mongo-express
  # mongo-express:
  #   image: mongo-express:latest
  #   container_name: mongo-express
  #   restart: always
      # env_file:
      # - ./../.env
  #   environment:
  #     - ME_CONFIG_MONGODB_URL=mongodb://${MONGO_ROOT_USER}:${MONGO_ROOT_PASSWORD}@mongodb-203:27011/?authSource=admin
  #     - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
  #     - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USER}
  #     - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD}
  #     - ME_CONFIG_BASICAUTH_USERNAME=mexpress
  #     - ME_CONFIG_BASICAUTH_PASSWORD=mexpress
  #     - ME_CONFIG_MONGODB_SERVER=mongo
  #   network_mode: host
  #   extra_hosts:
      # - mongodb-201:${NODE1}
      # - mongodb-202:${NODE2}
      # - mongodb-203:${NODE3}
  #   depends_on:
  #     - mongo1
  #   # ports:
  #   #   - 8080:8081
  #   expose:
  #     - 8081


networks:
  mongonet: